void SaveProgress() {
}

void LoadProgress(bool initScene) {
}

void PrepareSuccession() {
}

void DoSuccession() {
}

void FinalizeSuccession() {
	foreach (UserInteraction ui in action.uiList) {
		// substract the cost for this item for this year...
		budget -= ui.estimatedTotalCostForYear;
		// set cost to 0 (don't do it for ongoing measures)
		ui.estimatedTotalCostForYear = 0;
	}
	
	if (progression.HasData (AREA)) {
		// as we don't do ongoing measures here, just delete it
		progression.DeleteData (AREA);
	}
}

bool CanSelectTile (int x, int y, UserInteraction ui) {
	return ((x + y) % 2) == 1;
}

void MeasureTaken (string name, string group, int count) {
}

void ResearchConducted (string name, string group, int count) {
}